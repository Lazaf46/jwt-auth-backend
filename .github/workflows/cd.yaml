name: Continuous Delivery
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Node.js 18
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Create config.env file
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" > config.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> config.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> config.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> config.env
          echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> config.env
          echo "DB_CONNECTION_STRING=${{ env.DB_CONNECTION_STRING }}" >> config.env
          echo "PORT=${{ env.PORT }}" >> config.env

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: deps-node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Check if jwt-auth-backend is running
        id: check_pm2
        run: |
          status=$(pm2 list | grep -w "jwt-auth-backend" | awk '{print $18}')
          if [[ "$status" == "online" ]]; then
            echo "::set-output name=pm2_status::online"
          elif [[ "$status" == "stopped" ]]; then
            echo "::set-output name=pm2_status::stopped"
          else
            echo "::set-output name=pm2_status::"
          fi

      - name: Start jwt-auth-backend if pm2 is not started yet

      - name: Start jwt-auth-backend if pm2 is stopped

      - name: Restart jwt-auth-backend if pm2 is online
    
